"""
Created on Oct. 29, 2021
by Giulio Iannello

Developed by Massimo Capurro Llad√≤

This program anonimizes a log file generated by moodle. Every log contains information about an event.

Expected file extension: .json

Expected data in a log of the file:
    
-Date/Time,
-User name
-Involved User
-Event context
-Component
-Event
-Description
-Origin
-IP adress

Result of the program: 
    -1 new json file that contains the ANONYMIZED list of the logs
    -1 new json file that contains the list of users with their associated code 
"""


import json
import sys
import uuid
#import argparse


#This function reads the json file and saves its data into a list of lists

def ReadJsonFile(file):
    try:
        fin = open(file)
        log_list = json.load(fin)
        fin.close()
        return log_list
    except:
        print('Could not load the file! \nThe specified file path-name does not exist!')
        sys.exit()
    

#This function saves data onto a new json file

def SaveJsonFile(file, data):
    try: 
        fout = open(file, 'w')
        json.dump(data, fout, indent=2)
        fout.close()
    except:
        print('Something went wrong during the creation of the new file!')
        sys.exit()
    
#This function checks if there is a User Name. If it's missing fills the field with the Involved user
#TODO: Remove useless log: NO USER and NO USER INVOLVED 
def UserMissing(log):
    if(log[1]=='-' and log[2] != '-'):
        log[1], log[2]= log[2], log[1]

""" 
This function takes the log list as parameter and for every log switches
the Name of the User with a progressive code and deletes the involved user

"""

def Anonimize(log_list):
    log_list= log_list[0]
    id_tab = {}
    for log in log_list:
        UserMissing(log)
        if not log[1] in id_tab:
            new_id= uuid.uuid5(uuid.NAMESPACE_URL, log[1])
            id_tab[log[1]] =str(new_id)
        log.remove(log[2])
        log[1] = id_tab[log[1]]
    return id_tab


#TODO: Fix the parsing problem usin argparse
jsonFile = 'indata/anonimizza_test1.json'
log_list = ReadJsonFile(jsonFile)
code_tab = Anonimize(log_list)
SaveJsonFile('indata/anonymized1.json', log_list)
SaveJsonFile('indata/code_table.json', code_tab)

print("Task Ended")
